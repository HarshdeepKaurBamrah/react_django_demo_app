name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build the Docker image
      id: build-image
      run: docker build . --file Dockerfile --tag my-pythonapp:${{ github.run_number }}

    - name: Tag the Docker image
      run: docker tag my-pythonapp:${{ github.run_number }} hassanb111/my-pythonapp:${{ github.run_number }}

    - name: Push the Docker image
      run: docker push hassanb111/my-pythonapp:${{ github.run_number }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "eu-north-1"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition:  ".aws/task-definition.json"
        container-name:  "webapp"
        image: hassanb111/my-pythonapp:${{ github.run_number }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ".aws/task-definition.json"
        service: "python-2"
        cluster: "test"
        wait-for-service-stability: true
